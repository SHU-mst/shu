local player = game.Players.LocalPlayer
local camera = game.Workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local StarterGui = game:GetService("StarterGui")

-- Create a FOV Circle using the Drawing API
local fovCircle = Drawing.new("Circle")
fovCircle.Thickness = 2
fovCircle.Radius = 140 -- Default FOV circle radius (140 pixels)
fovCircle.Color = Color3.fromRGB(0, 255, 0) -- Green color
fovCircle.Filled = false
fovCircle.Transparency = 1

-- Toggle state for aimbot
local aimbotEnabled = false

-- Function to find the nearest player's head within FOV
local function getNearestPlayer()
    local nearestPlayer = nil
    local shortestDistance = math.huge -- set to infinity
    local players = game.Players:GetPlayers()

    for _, otherPlayer in ipairs(players) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("Head") then
            local head = otherPlayer.Character.Head
            local screenPosition, onScreen = camera:WorldToScreenPoint(head.Position)

            if onScreen then
                local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
                local distance = (screenCenter - Vector2.new(screenPosition.X, screenPosition.Y)).Magnitude
                
                -- Only consider players within the FOV circle radius
                if distance < fovCircle.Radius and distance < shortestDistance then
                    shortestDistance = distance
                    nearestPlayer = otherPlayer
                end
            end
        end
    end

    return nearestPlayer
end

-- Function to lock onto nearest player's head
local function aimAtNearestPlayer()
    if aimbotEnabled then -- Only aim when aimbot is enabled
        local nearestPlayer = getNearestPlayer()
        if nearestPlayer and nearestPlayer.Character and nearestPlayer.Character:FindFirstChild("Head") then
            local head = nearestPlayer.Character.Head
            camera.CFrame = CFrame.new(camera.CFrame.Position, head.Position)
        end
    end
end

-- Update FOV Circle position to the center of the screen
local function updateFOVCircle()
    local screenCenter = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    fovCircle.Position = screenCenter
end

-- Toggle the aimbot when "E" key is pressed
local function toggleAimbot(input)
    if input.KeyCode == Enum.KeyCode.E then
        aimbotEnabled = not aimbotEnabled -- Toggle aimbot on/off
        if aimbotEnabled then
            print("Aimbot Enabled")
        else
            print("Aimbot Disabled")
        end
    end
end

-- Resize FOV when arrow keys are pressed
local function resizeFOV(input)
    if input.KeyCode == Enum.KeyCode.Up then
        fovCircle.Radius = fovCircle.Radius + 10 -- Increase the FOV size
        print("FOV increased to:", fovCircle.Radius)
    elseif input.KeyCode == Enum.KeyCode.Down then
        fovCircle.Radius = math.max(20, fovCircle.Radius - 10) -- Decrease the FOV size, minimum of 20
        print("FOV decreased to:", fovCircle.Radius)
    end
end

-- Create a button to close the script
local function createCloseButton()
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 100, 0, 50)
    closeButton.Position = UDim2.new(0.5, -50, 0, 20) -- Centered at the top
    closeButton.Text = "Close"
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red color
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255) -- White text
    closeButton.Parent = player:WaitForChild("PlayerGui")

    closeButton.MouseButton1Click:Connect(function()
        fovCircle:Remove() -- Remove the FOV circle
        closeButton:Destroy() -- Remove the button
        print("Script Closed") -- Confirmation message
        -- Optionally, you can use task.cancel() or similar to stop any processes
    end)
end

-- Connect the key press event for toggling and resizing
UserInputService.InputBegan:Connect(toggleAimbot)
UserInputService.InputBegan:Connect(resizeFOV)

-- Create the close button
createCloseButton()

-- Connect aim function and update FOV circle every frame
RunService.RenderStepped:Connect(function()
    updateFOVCircle()
    aimAtNearestPlayer()
end)
